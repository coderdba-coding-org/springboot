spring.datasource.url=jdbc:oracle:thin:@192.168.40.151:1521/xepdb1
spring.datasource.username=orders
spring.datasource.password=orders
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

# For JPA metrics
# This generates sql execution statistics - necessary setting
spring.jpa.properties.hibernate.generate_statistics=true
#
# To get actual sql (not the transformed sql)
# -- None working as of now
#log4j.logger.org.hibernate.SQL=debug 
#log4j.logger.org.hibernate.stat=DEBUG
##slf4j.logger.org.hibernate.stat=DEBUG

# For JPA metrics (more metrics)
# https://stackoverflow.com/questions/30118683/how-to-log-sql-statements-in-spring-boot
#
# Show sql in stdout - not necessary/advisable - instead use logging.level.org.hibernate.SQL=DEBUG:
#spring.jpa.show-sql=true  
# Show the sql in formatted manner in stdout (somehow now working now - had worked earlier):
#spring.jpa.properties.hibernate.format_sql=true 
# Show sqls with comment "/*" delimiters (somehow now working now - had worked earlier):
#spring.jpa.properties.hibernate.use_sql_comments=true 
#
# Two settings from - https://www.baeldung.com/sql-logging-spring-boot:
# Logs the SQL queries - Puts a DEBUG log with the same SQL - optional if you want to see a 'DEBUG' message with the sql text: 
logging.level.org.hibernate.SQL=DEBUG 
# Logs the prepared statement parameters - may not be advisable to print those:
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 

# Logging - all optional
# This is mostly default pattern:
#logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
#logging.pattern.console=%d{HH:mm:ss} [%t] %-5level %logger{36} - %msg%n


#log4j.logger.org.hibernate.SQL=debug
#log4j.logger.org.hibernate.type.descriptor.sql=trace
